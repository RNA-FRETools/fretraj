name: Upload to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    if: github.repository == 'fdsteffen/fretraj' 
    runs-on: ${{ matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get Poetry for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
        source $HOME/.poetry/env
    - name: Get Poetry for Windows
      if: matrix.os == 'windows-latest'
      run: |
        (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -
        $env:Path += ";$HOME\.poetry\bin"
    - uses: conda-incubator/setup-miniconda@v2
    - name: Build package
      env:
        POETRY_VIRTUALENVS_CREATE: false  # conda-incubator by default activates a "test" environment
      run: |
        conda install mdtraj>=1.9.5 -c conda-forge
        poetry install --no-dev
        poetry build 
    - name: Upload build artefact
      uses: actions/upload-artifact@v2
      with:
        name: fretraj-dist
        path: dist
        retention-days: 1

  publish:
    needs: build
    if: github.repository == 'fdsteffen/fretraj' 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download build artefacts
      uses: actions/download-artifact@v2
      with:
        name: fretraj-dist
        path: dist
    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
        source $HOME/.poetry/env
        

